{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = 'http://localhost:7166/Stock';\nclass StockService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(`${baseUrl}/GetStock`);\n  }\n  get(id) {\n    return this.http.get(`${baseUrl}/GetById/${id}`);\n  }\n  create(data) {\n    return this.http.post(`${baseUrl}/PostStock`, data);\n  }\n  update(id, data) {\n    //return this.http.put(`${baseUrl}/${id}`, data);\n    return this.http.post(`${baseUrl}/UpdateStock`, data);\n  }\n  delete(id) {\n    return this.http.delete(`${baseUrl}/DeleteStock/${id}`);\n  }\n  deleteAll() {\n    return this.http.delete(baseUrl);\n  }\n  findByProducto(producto) {\n    return this.http.get(`${baseUrl}/GetByProd/${producto}`);\n  }\n}\nStockService.ɵfac = function StockService_Factory(t) {\n  return new (t || StockService)(i0.ɵɵinject(i1.HttpClient));\n};\nStockService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StockService,\n  factory: StockService.ɵfac,\n  providedIn: 'root'\n});\nexport { StockService };","map":{"version":3,"names":["baseUrl","StockService","constructor","http","getAll","get","id","create","data","post","update","delete","deleteAll","findByProducto","producto","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["G:\\Desa\\programa\\bdFront\\src\\app\\services\\stock.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Stock } from '../models/stock.model';\r\n\r\nconst baseUrl = 'http://localhost:7166/Stock';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StockService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAll(): Observable<Stock[]> {\r\n    return this.http.get<Stock[]>(`${baseUrl}/GetStock`);\r\n  }\r\n\r\n  get(id: any): Observable<Stock> {\r\n    return this.http.get<Stock>(`${baseUrl}/GetById/${id}`);\r\n  }\r\n\r\n  create(data: any): Observable<any> {\r\n    return this.http.post(`${baseUrl}/PostStock`, data);\r\n  }\r\n\r\n  update(id: any, data: any): Observable<any> {\r\n    //return this.http.put(`${baseUrl}/${id}`, data);\r\n    return this.http.post(`${baseUrl}/UpdateStock`, data);\r\n  }\r\n\r\n  delete(id: any): Observable<any> {\r\n    return this.http.delete(`${baseUrl}/DeleteStock/${id}`);\r\n  }\r\n\r\n  deleteAll(): Observable<any> {\r\n    return this.http.delete(baseUrl);\r\n  }\r\n\r\n  findByProducto(producto: any): Observable<Stock[]> {\r\n    return this.http.get<Stock[]>(`${baseUrl}/GetByProd/${producto}`);\r\n  }\r\n}\r\n"],"mappings":";;AAKA,MAAMA,OAAO,GAAG,6BAA6B;AAE7C,MAGaC,YAAY;EACvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAU,GAAGL,OAAO,WAAW,CAAC;EACtD;EAEAK,GAAGA,CAACC,EAAO;IACT,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAQ,GAAGL,OAAO,YAAYM,EAAE,EAAE,CAAC;EACzD;EAEAC,MAAMA,CAACC,IAAS;IACd,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAGT,OAAO,YAAY,EAAEQ,IAAI,CAAC;EACrD;EAEAE,MAAMA,CAACJ,EAAO,EAAEE,IAAS;IACvB;IACA,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAGT,OAAO,cAAc,EAAEQ,IAAI,CAAC;EACvD;EAEAG,MAAMA,CAACL,EAAO;IACZ,OAAO,IAAI,CAACH,IAAI,CAACQ,MAAM,CAAC,GAAGX,OAAO,gBAAgBM,EAAE,EAAE,CAAC;EACzD;EAEAM,SAASA,CAAA;IACP,OAAO,IAAI,CAACT,IAAI,CAACQ,MAAM,CAACX,OAAO,CAAC;EAClC;EAEAa,cAAcA,CAACC,QAAa;IAC1B,OAAO,IAAI,CAACX,IAAI,CAACE,GAAG,CAAU,GAAGL,OAAO,cAAcc,QAAQ,EAAE,CAAC;EACnE;;AA9BWb,YAAY,C;mBAAZA,YAAY,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZjB,YAAY,C;SAAZA,YAAY;EAAAkB,OAAA,EAAZlB,YAAY,CAAAmB,IAAA;EAAAC,UAAA,EAFX;AAAM;SAEPpB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}