{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = 'http://localhost:7166/Cliente';\nclass ClienteService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(`${baseUrl}/`);\n  }\n  get(id) {\n    return this.http.get(`${baseUrl}/GetById/${id}`);\n  }\n  create(data) {\n    return this.http.post(`${baseUrl}/PostStock`, data);\n  }\n  update(id, data) {\n    //return this.http.put(`${baseUrl}/${id}`, data);\n    return this.http.post(`${baseUrl}/UpdateStock`, data);\n  }\n  delete(id) {\n    return this.http.delete(`${baseUrl}/DeleteStock/${id}`);\n  }\n  deleteAll() {\n    return this.http.delete(baseUrl);\n  }\n}\nClienteService.ɵfac = function ClienteService_Factory(t) {\n  return new (t || ClienteService)(i0.ɵɵinject(i1.HttpClient));\n};\nClienteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ClienteService,\n  factory: ClienteService.ɵfac,\n  providedIn: 'root'\n});\nexport { ClienteService };","map":{"version":3,"names":["baseUrl","ClienteService","constructor","http","getAll","get","id","create","data","post","update","delete","deleteAll","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["G:\\Desa\\programa\\bdFront\\src\\app\\service\\cliente.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cliente } from '../models/cliente';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst baseUrl = 'http://localhost:7166/Cliente';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteService {\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<Cliente[]> {\n    return this.http.get<Cliente[]>(`${baseUrl}/`);\n  }\n\n  get(id: any): Observable<Cliente> {\n    return this.http.get<Cliente>(`${baseUrl}/GetById/${id}`);\n  }\n\n  create(data: any): Observable<any> {\n    return this.http.post(`${baseUrl}/PostStock`, data);\n  }\n\n  update(id: any, data: any): Observable<any> {\n    //return this.http.put(`${baseUrl}/${id}`, data);\n    return this.http.post(`${baseUrl}/UpdateStock`, data);\n  }\n\n  delete(id: any): Observable<any> {\n    return this.http.delete(`${baseUrl}/DeleteStock/${id}`);\n  }\n\n  deleteAll(): Observable<any> {\n    return this.http.delete(baseUrl);\n  }\n}\n"],"mappings":";;AAKA,MAAMA,OAAO,GAAG,+BAA+B;AAG/C,MAGaC,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,GAAGL,OAAO,GAAG,CAAC;EAChD;EAEAK,GAAGA,CAACC,EAAO;IACT,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAU,GAAGL,OAAO,YAAYM,EAAE,EAAE,CAAC;EAC3D;EAEAC,MAAMA,CAACC,IAAS;IACd,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAGT,OAAO,YAAY,EAAEQ,IAAI,CAAC;EACrD;EAEAE,MAAMA,CAACJ,EAAO,EAAEE,IAAS;IACvB;IACA,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAGT,OAAO,cAAc,EAAEQ,IAAI,CAAC;EACvD;EAEAG,MAAMA,CAACL,EAAO;IACZ,OAAO,IAAI,CAACH,IAAI,CAACQ,MAAM,CAAC,GAAGX,OAAO,gBAAgBM,EAAE,EAAE,CAAC;EACzD;EAEAM,SAASA,CAAA;IACP,OAAO,IAAI,CAACT,IAAI,CAACQ,MAAM,CAACX,OAAO,CAAC;EAClC;;AA3BWC,cAAc,C;mBAAdA,cAAc,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdf,cAAc,C;SAAdA,cAAc;EAAAgB,OAAA,EAAdhB,cAAc,CAAAiB,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPlB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}